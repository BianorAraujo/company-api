name: Build and Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore CompanyApi.sln
      working-directory: ./backend

    - name: Build
      run: dotnet build CompanyApi.sln --no-restore
      working-directory: ./backend

    - name: Run tests with coverage
      run: dotnet test --no-build --collect:"XPlat Code Coverage" --results-directory ./coverage
      working-directory: ./backend/CompanyApi.Test

    # Angular
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Angular dependencies
      run: npm ci
      working-directory: ./frontend

    - name: Run Angular tests with coverage
      run: npx ng test --no-watch --code-coverage
      working-directory: ./frontend

    # Publish to Coveralls
    - name: Publish .NET coverage to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel: true
        flag-name: dotnet-tests
        file: ./backend/CompanyApi.Test/coverage/*/coverage.cobertura.xml

    - name: Check Angular coverage file accessibility
      run: cat ./frontend/coverage/lcov.info || echo "Failed to read lcov.info"

    - name: Publish Angular coverage to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel: true
        flag-name: angular-tests
        file: ./frontend/coverage/lcov.info

    - name: Finish Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
